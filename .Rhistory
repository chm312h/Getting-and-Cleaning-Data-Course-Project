x <- (1,2,3)
x <- c(1,2,3)
y <- x^2
m <- 1000                # define size
C <- complex( real=rep(seq(-1.8,0.6, length.out=m), each=m ),
imag=rep(seq(-1.2,1.2, length.out=m), m ) )
C <- matrix(C,m,m)       # reshape as square matrix of complex numbers
Z <- 0                   # initialize Z to zero
X <- array(0, c(m,m,20)) # initialize output 3D array
for (k in 1:20) {        # loop with 20 iterations
Z <- Z^2+C             # the central difference equation
X[,,k] <- exp(-abs(Z)) # capture results
}
write.gif(X, "Mandelbrot.gif", col=jet.colors, delay=800)
library(caTools)         # external package providing write.gif function
jet.colors <- colorRampPalette(c("#00007F", "blue", "#007FFF", "cyan", "#7FFF7F",
"yellow", "#FF7F00", "red", "#7F0000"))
m <- 1000                # define size
C <- complex( real=rep(seq(-1.8,0.6, length.out=m), each=m ),
imag=rep(seq(-1.2,1.2, length.out=m), m ) )
C <- matrix(C,m,m)       # reshape as square matrix of complex numbers
Z <- 0                   # initialize Z to zero
X <- array(0, c(m,m,20)) # initialize output 3D array
for (k in 1:20) {        # loop with 20 iterations
Z <- Z^2+C             # the central difference equation
X[,,k] <- exp(-abs(Z)) # capture results
}
write.gif(X, "Mandelbrot.gif", col=jet.colors, delay=800)
library(caTools)         # external package providing write.gif function
jet.colors <- colorRampPalette(c("#00007F", "blue", "#007FFF", "cyan", "#7FFF7F",
"yellow", "#FF7F00", "red", "#7F0000"))
m <- 1000                # define size
C <- complex( real=rep(seq(-1.8,0.6, length.out=m), each=m ),
imag=rep(seq(-1.2,1.2, length.out=m), m ) )
C <- matrix(C,m,m)       # reshape as square matrix of complex numbers
Z <- 0                   # initialize Z to zero
X <- array(0, c(m,m,20)) # initialize output 3D array
for (k in 1:20) {        # loop with 20 iterations
Z <- Z^2+C             # the central difference equation
X[,,k] <- exp(-abs(Z)) # capture results
}
write.gif(X, "Mandelbrot.gif", col=jet.colors, delay=800)
x<-1:4
y<-2:3
x+y
readJPEG(source, native = FALSE)
install.packages("jpeg")
install.packages("jpeg")
readJPEG(source, native = FALSE)
library(jpeg)
readJPEG(source, native = FALSE)
readJPEG('https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg', native = FALSE)
setwd("~/Desktop")
readJPEG('getdata%2Fjeff.jpg', native = FALSE)
readJPEG('getdata_jeff.jpg', native = FALSE)
readJPEG('getdata-jeff.jpg', native = FALSE)
quantile(readJPEG('getdata-jeff.jpg', native = FALSE))
quantile(readJPEG('getdata-jeff.jpg', native = FALSE),c(30,80))
quantile(readJPEG('getdata-jeff.jpg', native = FALSE),probs=seq(0.3,0.8))
quantile(readJPEG('getdata-jeff.jpg', native = TRUE),probs=seq(0.3,0.8))
quantile(readJPEG('getdata-jeff.jpg', native = TRUE),probs=seq(0.3))
quantile(readJPEG('getdata-jeff.jpg', native = TRUE),probs=seq(0.5))
quantile(readJPEG('getdata-jeff.jpg', native = TRUE),prob=c(0.3,0.8))
setwd("/media/henry/RAID1/backup/Henry/文件庫/Organization/Coursera/Johns Hopkins University/Data Science/03-Getting and Cleaning Data/Project")
source('/media/henry/RAID1/backup/Henry/文件庫/Organization/Coursera/Johns Hopkins University/Data Science/03-Getting and Cleaning Data/Project/run_analysis.R')
run()
run()
source('/media/henry/RAID1/backup/Henry/文件庫/Organization/Coursera/Johns Hopkins University/Data Science/03-Getting and Cleaning Data/Project/run_analysis.R')
source('/media/henry/RAID1/backup/Henry/文件庫/Organization/Coursera/Johns Hopkins University/Data Science/03-Getting and Cleaning Data/Project/run_analysis.R')
run()
source('/media/henry/RAID1/backup/Henry/文件庫/Organization/Coursera/Johns Hopkins University/Data Science/03-Getting and Cleaning Data/Project/run_analysis.R')
run()
source('/media/henry/RAID1/backup/Henry/文件庫/Organization/Coursera/Johns Hopkins University/Data Science/03-Getting and Cleaning Data/Project/run_analysis.R')
run()
source('/media/henry/RAID1/backup/Henry/文件庫/Organization/Coursera/Johns Hopkins University/Data Science/03-Getting and Cleaning Data/Project/run_analysis.R')
run()
source('/media/henry/RAID1/backup/Henry/文件庫/Organization/Coursera/Johns Hopkins University/Data Science/03-Getting and Cleaning Data/Project/run_analysis.R')
run()
